第一部分git的介绍
 1. Git是目前世界上最先进的分布式版本控制系统；
 2. 集中式和分布式版本控制系统有什么区别呢？
    先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，
    干完活了，再把自己的活推送给中央服务器。
   首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库。
   既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？
   比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。
   和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，
   随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。

3.git安装的时候要自报家门
  $ git config --global user.name "Your Name"
  $ git config --global user.email "email@example.com"
  
第二部分git的使用
1.创建版本库
 1.1 版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，
  每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。
 1.2. $ mkdir xxx 创建一个空目录
      $ git init   通过git init命令把这个目录变成Git可以管理的仓库：
      添加文件到git仓库
      1.2.1  $ git add xxx    用命令git add告诉Git，把文件添加到仓库：（注意：编写的文件一定要放在创建的空目录下）
      1.2.2  $ git commit -m "xxx"    用命令git commit告诉Git，把文件提交到仓库：
 1.3 为什么Git添加文件需要add，commit一共两步呢？
     因为commit可以一次提交很多文件，所以你可以多次add不同的文件
2.文件的修改
 2.1 $ git status    该命令可以让我们时刻掌握仓库当前的状态
     $ git diff xxx  该命令可以查看修改内容。
 2.2 $ git log       该命令显示从最近到最远的提交日志
     $ git log --pretty=oneline  该命令只显示出一部分的信息，其中你看到的一大串类似1094adb...的是commit id（版本号）
                                 （由于是分布式系统，版本号会是比较大的数）
3.版本回退                               
  3.1 首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本， 上一个版本就是HEAD^，上上一个版本就是HEAD^^，
     当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。                               
     $ git reset --hard HEAD^                            
     $ git reset --hard 1094a   （版本号没必要写全，前几位就可以了，Git会自动去找。）
                                 
                                 
                                 
 
